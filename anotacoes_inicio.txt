NOVAS INSTRUÇÕES: 
	Novas de interrupções: 	GETPC, SETPC, SETHI, SETLO, STOREINST, GETQUANTUM, SETQUANTUM, LOCK,
							RELEASE, BIOSINT

Detalhes e próximas etapas:
	- Garantir as etapas que a BIOS tem que exercer na troca de processos:
		1. Chamada do agendador com base em $k0 e $k1 e sem desempilhar registradores 						- OK
		2. Liberação do barramento para execução do agendador												- OK
		3. O agendador precisa ser escrito para disponibilizar $k0, $k1, $re e sinalizar programa 0
		4. A BIOS volta a executar e chama um trecho de código que trata interrupções:
			- Se a interrupção tiver vindo do programa 0 ($fp==0) não empilhar registradores
			- Se a interrupção não tiver vindo do programa 0 ($fp!=0) empilha os registradores usando $re
			- Se a interrupção veio do programa 0 ($fp==0) e é para chamar programa ($re!=0) desempilha registradores
	- O programa 0 tem que ser capaz de inicializar a tabela de processos
	- O programa 0 tem que ser capaz de inserir na memoria principal o programa 1 que será o principal do SO
	- O programa 0 tem que selecionar $k0, $k1, $re para colocar um processo em execução
	- O programa 0 e 1 tem que ser capazes de inserir um processo na tabela de processos
	- Na inserção de um processo na tabela de processos os programas tem que ZERAR a região de armazenamento de registradores na memória principal do processo
	- Um processo, quando concluído (HALT) tem que entrar em estado de concluído
		
TAMANHO DA MEMÓRIA SECUNDÁRIA DA MINHA MÁQUINA: 32768 posições	=> Tempo de leitura = 4*20ns; Tempo de escrita = 4*20ns
						8 trilhas, 32 setores, 128 valores cada setor
TAMANHO DA MEMÓRIA PRINCIPAL DA MINHA MÁQUINA: 4096 posições 	=> Tempo de leitura = 2*20ns; Tempo de escrita = 2*20ns
